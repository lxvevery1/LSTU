;my.asm
indat segment
    len dw 4 ;количество элементов
    mas db 4 dup(0) ;инициализируем массив входных данных
    outmas db 8 dup(0) ;массив выходных данных (для вывода в ASCII)
indat ends

code segment
    assume cs:code, ds:indat

begin:
    mov dx, indat
    mov ds, dx
    mov dx, 0B800h ;база видеопамяти
    mov es, dx ;дополнительный сегмент - видеопамять

    xor di, di ;смещение в видеопамяти - левая верхняя позиция
    xor dx, dx ;в DX будет формироваться вводимое число

    ;очистка экрана
    mov ax, 0720h ;07 - серый символ на чёрном фоне, 20 - ASCII-код пробела
    mov cx, 80*25 ;размер видеопамяти одного текстового экрана в словах
    rep stosw ;цикл заполнения серым пробелом на чёрном фоне одного экрана

    ;инициализация регистров для ввода числа
    xor di, di ;снова на начало видеопамяти, в левый верхний угол экрана
    xor si, si ;счетчик массива mas, в который будет вестись запись
    mov cx, len ;счетчик введенных чисел

    ;цикл ввода
inloop:
    in al, 60h ;чтение скан-кода клавиши из порта 60h контроллера клавиатуры
    cmp al, bl ;сравнение с предыдущим скан-кодом, если не равно, то клавиша отжата
    je inloop ;цикл повторяется, пока клавиша не будет отжата
    mov bl, al ;скан-код в BL для последующего сравнения

    cmp al, 01h ;скан-код клавиши Esc
    jne NotEsc
    jmp quit

NotEsc:
    cmp al, 0Bh ;скан-код клавиши 0
    je num0

    cmp al, 02h ;скан-код клавиш >=1
    jl inloop
    cmp al, 10h ;скан-код клавиш <=9
    jg inloop

    ; получаем число из сканкода
    dec al ; клавиша 1 имеет сканкод 2, поэтому уменьшаем на 1
    jmp action
num0:
    mov al, 0
action:
    add al, '0' ; преобразуем числовое значение в ASCII-код цифры
    mov es:[di], ax ;видео-буфер кладем цифру на черном фоне
    mov mas[si], al ;сохранение считанного числа в массив

    inc di ;смещение в видеопамяти на следующий символ
    inc di
    inc si ;увеличиваем счетчик массивов
    dec cx ;декремент счетчика
    jnz inloop ;если еще не все цифры введены, ввод следующей цифры

    ; вывод введенного числа
    xor di, di ;сброс смещения
    mov si, 0 ;сброс счетчика массива
    mov cx, len ;восстановление счетчика

Loopit:
    mov al, mas[si] ;в регистр al кладем si-тый элемент из входного массива
    mov es:[di], al ;выводим цифру на экран
    inc di ;смещаемся в видеопамяти
    inc si ;увеличиваем счетчик массивов
    loop Loopit ;повторяем цикл

    ; выход по нажатию ESC
    wait_l:
    in al, 60h
    cmp al, 01h
    jne wait_l
    jmp quit

quit:
    mov ax, 4c00h
    int 21h
code ends
end begin