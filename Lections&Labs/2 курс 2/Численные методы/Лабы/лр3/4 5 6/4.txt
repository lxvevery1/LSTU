// Метод простых итераций
#include <iostream>
#include <iomanip>
#define n 5
using namespace std;

int main()
{
    float A[n][n] =   { {0.369080808,	1.436031013, -0.728668525,	0.990262713, -1.066533038},
                        {9.321890071, -1.513583362, -3.530025844, -5.518609715,	1.735434769,},
                        {0.53279339, -2.264422783, -4.01783643, -5.59560245, -3.516869824, },
                        {1.624855009,	1.624346269, -2.438991881,	2.43852384,	2.741387029,},
                        {-7.857573106, -1.199934881, -0.823975906,	0.389003073, -6.276184856} };


    float Xi[n], X[n], summ = 0, Xinorm[n], e, a, a0, eps = 0.0001;
    int i, j, k;


    cout << setprecision(4) << fixed;

    Xi[0] = 1;
    for (i = 1; i < n; i++)
        Xi[i] = 0;
    do
    {
        for (i = 0; i < n; i++)
            summ += pow(Xi[i], 2);
        a0 = sqrt(summ);
        for (i = 0; i < n; i++)
            Xinorm[i] = Xi[i] / a0;
        for (i = 0; i < n; i++)
        {
            X[i] = 0;
            for (j = 0; j < n; j++)
                X[i] += A[i][j] * Xinorm[j]; // y^(k+1) = AX^(k)
        }
        summ = 0;
        for (i = 0; i < n; i++)
            summ += pow(X[i], 2);
        a = sqrt(summ);
        e = abs(a - a0);
        for (i = 0; i < n; i++)
            Xi[i] = X[i];
        summ = 0;

        // Display
        cout << "\nEigen Value = " << a;
        cout << "\tEigen Vector: [";
        for (i = 0; i < n; i++)
        {
            cout << Xinorm[i] << "\t";
        }
        cout << "]";
    } while (e > eps);

    return 0;
}