model small

data_in segment
    input db 83
data_in ends

data_out segment
    res1 db 0
data_out ends

stack segment
    dw 100 dup(0) ; Stack definition
stack ends

code segment
    assume DS:data_out, ES:data_in, CS:code, SS:stack

    near_conversion proc
        mov ax, data_in
        mov es, ax
        mov ax, data_out 
        mov ds, ax 
        
        mov al, input
        xor ah, ah

        mov bl, 10
        div bl
        mov dl, al
        mov al, ah
        shl dl, 4
        
        or al, dl
        push ax
        ; Call far_conversion from the far_code segment
        
        call far ptr far_conversion
        ret; Return from subroutine
    near_conversion endp

start:
    mov ax, stack
    mov ss, ax

    call near_conversion

    mov ah, 4Ch
    int 21h
code ends

far_code segment
    res2 db 0
    assume CS:far_code
    far_conversion proc far

        ; Store the low nibble in res1
        mov res1, al

        ; Store the high nibble in res2
        mov res2, al

        retf 2; Far return '2' to pop ax
    far_conversion endp
far_code ends
end start