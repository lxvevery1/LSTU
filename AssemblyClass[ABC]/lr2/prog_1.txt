model small
data_in segment
    input db 83
data_in ends
data_out segment
    res1 db 0
data_out ends
stack segment
    dw 100 dup(0) ; Stack definition
stack ends
code segment
    res2 db 0
    assume DS:data_out, ES:data_in, CS:code, SS:stack

    near_conversion proc
    push ax ; Storing register ax in the stack

    mov ax, data_in
    mov es, ax
    mov ax, data_out
    mov ds, ax
    mov al, input
    xor ah, ah
    mov bl, 10
    div bl
    mov dl, al
    mov al, ah
    shl dl, 4
    or al, dl
    mov res1, al
    mov res2, al

    pop ax ; Restore register ax from the stack
    ret ; Return from subroutine
near_conversion endp

far_conversion proc far
    push ax ; Saving register ax in the stack

    mov ax, data_in
    mov es, ax
    mov ax, data_out
    mov ds, ax
    mov al, input
    xor ah, ah
    mov bl, 10
    div bl
    mov dl, al
    mov al, ah
    shl dl, 4
    or al, dl
    mov res1, al
    mov res2, al

    pop ax ; Retrieve register ax from the stack
    retf ; Return with update cs from the stack

start:
    mov ax, stack
    mov ss, ax ; Stack initialization

    call near_conversion

    call far_conversion

    mov ah, 4Ch
    int 21h

code ends
end start